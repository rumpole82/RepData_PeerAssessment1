library(swirl)
library(KernSmooth R)
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
swirl()
5+7
x <- 5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10, by=0.5)
seq(5,10,length=30)
my_seq <-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,40)
rep(0,times=40)
rep(c(0,1,2),10)
rep(c(0,1,2), times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0,5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect <1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name <- c(my_char, "rumpole82")
my_name
paste(my_name, collapse=" ")
paste("Hellp", "world!", sep= " ")
paste("Hello", "world!", sep= " ")
paste(1:3, c("X","Y","Z"))
paste(1:3, c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(4,5)
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
my_data <- colnames(cnames)
colnames(my_data) <- cnames
my_data
TRUE==FALSE
TURE==TRUE
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5 !=7
5!=7
5!==7
! 5==7
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
library(datasets)
data(iris)
head(iris)
mean(iris$Sepal.Length, Species=virginica, na.rm=TRUE)
mean(iris$Sepal.Length, Species=setosa, na.rm=TRUE)
mean(iris$Sepal.Length, na.rm=TRUE)
mean(iris$Sepal.Length)
mean(lapply[iris$Sepal.Length,Species=virginica])
?lapply
mean(iris[1:4])
mean(iris$Sepal.Length, Species== "setosa", na.rm=TRUE)
head(iris)
mean(lapply[iris$Sepal.Length,iris$Species=virginica])
mean(lapply[iris$Sepal.Length,iris$Species=="virginica"])
mean(lapply[iris$Sepal.Length,iris$Species==virginica])
mean(lapply[iris, mean)
lapply(iris, mean)
lapply(iris, mean)
?lapply
a <- split(iris, iris$Species, mean)
a <- split(iris, iris$Species)
a
lapply(split(iris, iris$Species), mean)
a <- split(iris, iris$Species)
a
head(a)
head(a)
lapply(a, mean)
mean(a)
lapply(split(iris, iris$Species), mean)
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris, 2, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
set.seed(1)
rpois(5,2)
?rpois
?rnorm
?rpois
set.seed(10)
x <- rbinom(10,10,0.5)
e <- rnorm(10,0,20)
y <- 0.5 + 2*x + e
print(y)
hist(y)
?rpois
y
plot(y)
set.seed(10)
x <- rbinom(100, 1, 0.5)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
plot(y)
plot(x, y)
?rpois
Rprof()
fit <- lm(y ~ x1 + x2)
?by.self
?byself
?summaryRprof
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(tidyr)
quit()
data <- fread(paste("grep ^[12]/2/2007", "household_power_consumption.txt"),
na.strings=c("?",""))
setnames(data, colnames(fread("household_power_consumption.txt", nrows=0)))
data$DateTime <- as.POSIXct(paste(data$Date, data$Time), format="%d/%m/%Y %H:%M:%S")
par(bg="transparent")
par(mfcol = c(2,2))
par(mar=c(4,4,2,2))
plot(data$DateTime, data$Global_active_power, type="l",
ylab = paste("Global Active Power"),
xlab = paste(""))
plot(data$DateTime, data$Sub_metering_1, type="l", col="black",
ylab = paste("Energy sub metering"),
xlab = paste(""))
lines(data$DateTime, data$Sub_metering_2, col="red")
lines(data$DateTime, data$Sub_metering_3, col="blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(data$DateTime, data$Voltage, type="l",
ylab = paste("Voltage"),
xlab = paste("datetime"))
plot(data$DateTime, data$Global_reactive_power, type="l",
ylab = paste("Global_reactive_power"),
xlab = paste("datetime"))
setwd("~/Desktop/RR/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
install.packages("knitr")
library(knitr)
knit2html("PA1_template.Rmd")
dir()
knit2html("PA1_template.Rmd")
